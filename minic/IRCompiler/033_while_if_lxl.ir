define i32 @get_one(i32 %t1) {
	declare i32 %l0 
	declare i32 %l2 
	entry
	%l2=%t1
	%l0=1
	exit %l0
}

define i32 @deepWhileBr(i32 %t1,i32 %t2) {
	declare i32 %l0 
	declare i32 %l3 
	declare i32 %l4 
	declare i32 %l5 ;c
	declare i32 %l11 ;d
	declare i32 %l19 ;e
	declare i32 %t6 
	declare i32 %t7 
	declare i32 %t8 
	declare i32 %t9 
	declare i1 %t10 
	declare i32 %t12 
	declare i1 %t13 
	declare i32 %t14 
	declare i32 %t15 
	declare i32 %t16 
	declare i32 %t17 
	declare i1 %t18 
	declare i32 %t20 
	declare i32 %t21 
	declare i32 %t22 
	declare i1 %t23 
	declare i32 %t24 
	declare i32 %t25 
	declare i32 %t26 
	entry
	%l3=%t1
	%l4=%t2
	%t6=%l3
	%t7=%l4
	%t8 = add %t6, %t7
	%l5=%t8
	br label .L2
.L2:
	%t9=%l5
	%t10=cmp lt %t9, 75
	bc %t10,label.L3 ,label.L4 
.L3:
	%l11=42
	%t12=%l5
	%t13=cmp lt %t12, 100
	bc %t13,label.L5 ,label.L7 
.L5:
	%t14=%l5
	%t15=%l11
	%t16 = add %t14, %t15
	%l5=%t16
	%t17=%l5
	%t18=cmp gt %t17, 99
	bc %t18,label.L8 ,label.L10 
.L8:
	%t20=%l11
	%t21 = mul %t20, 2
	%l19=%t21
	%t22 = call i32 @get_one(i32 0)
	%t23=cmp eq %t22, 1
	bc %t23,label.L11 ,label.L13 
.L11:
	%t24=%l19
	%t25 = mul %t24, 2
	%l5=%t25
	br label .L13
.L13:
	br label .L10
.L10:
	br label .L7
.L7:
	br label .L2
.L4:
	%t26=%l5
	%l0=%t26
	br label .L1
.L1:
	exit %l0
}

define i32 @main() {
	declare i32 %l0 
	declare i32 %l1 ;p
	declare i32 %t2 
	declare i32 %t3 
	declare i32 %t4 
	declare i32 %t5 
	entry
	%l1=2
	%t2=%l1
	%t3=%l1
	%t4 = call i32 @deepWhileBr(i32 %t2, i32 %t3)
	%l1=%t4
	%t5=%l1
	call void @putint(i32 %t5)
	%l0=0
	exit %l0
}

