@dp = global [18 x [18 x [18 x [18 x [18 x [7 x i32]]]]]] zeroinitializer, align 16
@list = global [200 x i32] zeroinitializer, align 16
@cns = global [20 x i32] zeroinitializer, align 16
define i32 @equal(i32 %t0, i32 %t1) {
.L5:
	%l2 = alloca i32, align 4
	%l3 = alloca i32, align 4
	%l4 = alloca i32, align 4
	store i32 %t0, i32* %l3, align 4
	store i32 %t1, i32* %l4, align 4
	%t5 = load i32, i32* %l3, align 4
	%t6 = load i32, i32* %l4, align 4
	%t7 = icmp eq i32 %t5, %t6
	br i1 %t7, label %.L2, label %.L4
.L2:
	store i32 1, i32* %l2, align 4
	br label %.L1
.L4:
	store i32 0, i32* %l2, align 4
	br label %.L1
.L1:
	%t8 = load i32, i32* %l2, align 4
	ret i32 %t8
}
define i32 @dfs(i32 %t0, i32 %t1, i32 %t2, i32 %t3, i32 %t4, i32 %t5) {
.L23:
	%l10 = alloca i32, align 4
	%l11 = alloca i32, align 4
	%l12 = alloca i32, align 4
	%l13 = alloca i32, align 4
	%l6 = alloca i32, align 4
	%l7 = alloca i32, align 4
	%l8 = alloca i32, align 4
	%l9 = alloca i32, align 4
	store i32 %t0, i32* %l7, align 4
	store i32 %t1, i32* %l8, align 4
	store i32 %t2, i32* %l9, align 4
	store i32 %t3, i32* %l10, align 4
	store i32 %t4, i32* %l11, align 4
	store i32 %t5, i32* %l12, align 4
	%t14 = load i32, i32* %l7, align 4
	%t15 = load i32, i32* %l8, align 4
	%t16 = load i32, i32* %l9, align 4
	%t17 = load i32, i32* %l10, align 4
	%t18 = load i32, i32* %l11, align 4
	%t19 = load i32, i32* %l12, align 4
	%t20 = mul nsw i32 %t14, 18
	%t21 = add nsw i32 %t20, %t15
	%t22 = mul nsw i32 %t21, 18
	%t23 = add nsw i32 %t22, %t16
	%t24 = mul nsw i32 %t23, 18
	%t25 = add nsw i32 %t24, %t17
	%t26 = mul nsw i32 %t25, 18
	%t27 = add nsw i32 %t26, %t18
	%t28 = mul nsw i32 %t27, 7
	%t29 = add nsw i32 %t28, %t19
	%t30 = mul nsw i32 %t29, 4
	%t182 = getelementptr inbounds [18 x [18 x [18 x [18 x [18 x [7 x i32]]]]]], [18 x [18 x [18 x [18 x [18 x [7 x i32]]]]]]* @dp, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0
	%t183 = bitcast i32* %t182 to i8*
	%t185 = sext i32 %t30 to i64
	%t184 = getelementptr inbounds i8, i8* %t183, i64 %t185
	%t31 = bitcast i8* %t184 to i32*
	%t32 = sub nsw i32 0, 1
	%t34 = load i32, i32* %t31, align 4
	%t33 = icmp ne i32 %t34, %t32
	br i1 %t33, label %.L2, label %.L4
.L2:
	%t35 = load i32, i32* %l7, align 4
	%t36 = load i32, i32* %l8, align 4
	%t37 = load i32, i32* %l9, align 4
	%t38 = load i32, i32* %l10, align 4
	%t39 = load i32, i32* %l11, align 4
	%t40 = load i32, i32* %l12, align 4
	%t41 = mul nsw i32 %t35, 18
	%t42 = add nsw i32 %t41, %t36
	%t43 = mul nsw i32 %t42, 18
	%t44 = add nsw i32 %t43, %t37
	%t45 = mul nsw i32 %t44, 18
	%t46 = add nsw i32 %t45, %t38
	%t47 = mul nsw i32 %t46, 18
	%t48 = add nsw i32 %t47, %t39
	%t49 = mul nsw i32 %t48, 7
	%t50 = add nsw i32 %t49, %t40
	%t51 = mul nsw i32 %t50, 4
	%t186 = getelementptr inbounds [18 x [18 x [18 x [18 x [18 x [7 x i32]]]]]], [18 x [18 x [18 x [18 x [18 x [7 x i32]]]]]]* @dp, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0
	%t187 = bitcast i32* %t186 to i8*
	%t189 = sext i32 %t51 to i64
	%t188 = getelementptr inbounds i8, i8* %t187, i64 %t189
	%t52 = bitcast i8* %t188 to i32*
	%t190 = load i32, i32* %t52, align 4
	store i32 %t190, i32* %l6, align 4
	br label %.L1
.L4:
	%t53 = load i32, i32* %l7, align 4
	%t54 = load i32, i32* %l8, align 4
	%t55 = add nsw i32 %t53, %t54
	%t56 = load i32, i32* %l9, align 4
	%t57 = add nsw i32 %t55, %t56
	%t58 = load i32, i32* %l10, align 4
	%t59 = add nsw i32 %t57, %t58
	%t60 = load i32, i32* %l11, align 4
	%t61 = add nsw i32 %t59, %t60
	%t62 = icmp eq i32 %t61, 0
	br i1 %t62, label %.L5, label %.L7
.L5:
	store i32 1, i32* %l6, align 4
	br label %.L1
.L7:
	store i32 0, i32* %l13, align 4
	%t63 = load i32, i32* %l7, align 4
	%t191 = icmp ne i32 %t63, 0
	br i1 %t191, label %.L8, label %.L10
.L8:
	%t64 = load i32, i32* %l13, align 4
	%t65 = load i32, i32* %l7, align 4
	%t66 = load i32, i32* %l12, align 4
	%t67 = call i32 @equal(i32 %t66, i32 2)
	%t68 = sub nsw i32 %t65, %t67
	%t69 = load i32, i32* %l7, align 4
	%t70 = sub nsw i32 %t69, 1
	%t71 = load i32, i32* %l8, align 4
	%t72 = load i32, i32* %l9, align 4
	%t73 = load i32, i32* %l10, align 4
	%t74 = load i32, i32* %l11, align 4
	%t75 = call i32 @dfs(i32 %t70, i32 %t71, i32 %t72, i32 %t73, i32 %t74, i32 1)
	%t76 = mul nsw i32 %t68, %t75
	%t77 = add nsw i32 %t64, %t76
	%t78 = srem i32 %t77, 1000000007
	store i32 %t78, i32* %l13, align 4
	br label %.L10
.L10:
	%t79 = load i32, i32* %l8, align 4
	%t192 = icmp ne i32 %t79, 0
	br i1 %t192, label %.L11, label %.L13
.L11:
	%t80 = load i32, i32* %l13, align 4
	%t81 = load i32, i32* %l8, align 4
	%t82 = load i32, i32* %l12, align 4
	%t83 = call i32 @equal(i32 %t82, i32 3)
	%t84 = sub nsw i32 %t81, %t83
	%t85 = load i32, i32* %l7, align 4
	%t86 = add nsw i32 %t85, 1
	%t87 = load i32, i32* %l8, align 4
	%t88 = sub nsw i32 %t87, 1
	%t89 = load i32, i32* %l9, align 4
	%t90 = load i32, i32* %l10, align 4
	%t91 = load i32, i32* %l11, align 4
	%t92 = call i32 @dfs(i32 %t86, i32 %t88, i32 %t89, i32 %t90, i32 %t91, i32 2)
	%t93 = mul nsw i32 %t84, %t92
	%t94 = add nsw i32 %t80, %t93
	%t95 = srem i32 %t94, 1000000007
	store i32 %t95, i32* %l13, align 4
	br label %.L13
.L13:
	%t96 = load i32, i32* %l9, align 4
	%t193 = icmp ne i32 %t96, 0
	br i1 %t193, label %.L14, label %.L16
.L14:
	%t97 = load i32, i32* %l13, align 4
	%t98 = load i32, i32* %l9, align 4
	%t99 = load i32, i32* %l12, align 4
	%t100 = call i32 @equal(i32 %t99, i32 4)
	%t101 = sub nsw i32 %t98, %t100
	%t102 = load i32, i32* %l7, align 4
	%t103 = load i32, i32* %l8, align 4
	%t104 = add nsw i32 %t103, 1
	%t105 = load i32, i32* %l9, align 4
	%t106 = sub nsw i32 %t105, 1
	%t107 = load i32, i32* %l10, align 4
	%t108 = load i32, i32* %l11, align 4
	%t109 = call i32 @dfs(i32 %t102, i32 %t104, i32 %t106, i32 %t107, i32 %t108, i32 3)
	%t110 = mul nsw i32 %t101, %t109
	%t111 = add nsw i32 %t97, %t110
	%t112 = srem i32 %t111, 1000000007
	store i32 %t112, i32* %l13, align 4
	br label %.L16
.L16:
	%t113 = load i32, i32* %l10, align 4
	%t194 = icmp ne i32 %t113, 0
	br i1 %t194, label %.L17, label %.L19
.L17:
	%t114 = load i32, i32* %l13, align 4
	%t115 = load i32, i32* %l10, align 4
	%t116 = load i32, i32* %l12, align 4
	%t117 = call i32 @equal(i32 %t116, i32 5)
	%t118 = sub nsw i32 %t115, %t117
	%t119 = load i32, i32* %l7, align 4
	%t120 = load i32, i32* %l8, align 4
	%t121 = load i32, i32* %l9, align 4
	%t122 = add nsw i32 %t121, 1
	%t123 = load i32, i32* %l10, align 4
	%t124 = sub nsw i32 %t123, 1
	%t125 = load i32, i32* %l11, align 4
	%t126 = call i32 @dfs(i32 %t119, i32 %t120, i32 %t122, i32 %t124, i32 %t125, i32 4)
	%t127 = mul nsw i32 %t118, %t126
	%t128 = add nsw i32 %t114, %t127
	%t129 = srem i32 %t128, 1000000007
	store i32 %t129, i32* %l13, align 4
	br label %.L19
.L19:
	%t130 = load i32, i32* %l11, align 4
	%t195 = icmp ne i32 %t130, 0
	br i1 %t195, label %.L20, label %.L22
.L20:
	%t131 = load i32, i32* %l13, align 4
	%t132 = load i32, i32* %l11, align 4
	%t133 = load i32, i32* %l7, align 4
	%t134 = load i32, i32* %l8, align 4
	%t135 = load i32, i32* %l9, align 4
	%t136 = load i32, i32* %l10, align 4
	%t137 = add nsw i32 %t136, 1
	%t138 = load i32, i32* %l11, align 4
	%t139 = sub nsw i32 %t138, 1
	%t140 = call i32 @dfs(i32 %t133, i32 %t134, i32 %t135, i32 %t137, i32 %t139, i32 5)
	%t141 = mul nsw i32 %t132, %t140
	%t142 = add nsw i32 %t131, %t141
	%t143 = srem i32 %t142, 1000000007
	store i32 %t143, i32* %l13, align 4
	br label %.L22
.L22:
	%t144 = load i32, i32* %l13, align 4
	%t145 = srem i32 %t144, 1000000007
	%t146 = load i32, i32* %l7, align 4
	%t147 = load i32, i32* %l8, align 4
	%t148 = load i32, i32* %l9, align 4
	%t149 = load i32, i32* %l10, align 4
	%t150 = load i32, i32* %l11, align 4
	%t151 = load i32, i32* %l12, align 4
	%t152 = mul nsw i32 %t146, 18
	%t153 = add nsw i32 %t152, %t147
	%t154 = mul nsw i32 %t153, 18
	%t155 = add nsw i32 %t154, %t148
	%t156 = mul nsw i32 %t155, 18
	%t157 = add nsw i32 %t156, %t149
	%t158 = mul nsw i32 %t157, 18
	%t159 = add nsw i32 %t158, %t150
	%t160 = mul nsw i32 %t159, 7
	%t161 = add nsw i32 %t160, %t151
	%t162 = mul nsw i32 %t161, 4
	%t196 = getelementptr inbounds [18 x [18 x [18 x [18 x [18 x [7 x i32]]]]]], [18 x [18 x [18 x [18 x [18 x [7 x i32]]]]]]* @dp, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0
	%t197 = bitcast i32* %t196 to i8*
	%t199 = sext i32 %t162 to i64
	%t198 = getelementptr inbounds i8, i8* %t197, i64 %t199
	%t163 = bitcast i8* %t198 to i32*
	store i32 %t145, i32* %t163, align 4
	%t164 = load i32, i32* %l7, align 4
	%t165 = load i32, i32* %l8, align 4
	%t166 = load i32, i32* %l9, align 4
	%t167 = load i32, i32* %l10, align 4
	%t168 = load i32, i32* %l11, align 4
	%t169 = load i32, i32* %l12, align 4
	%t170 = mul nsw i32 %t164, 18
	%t171 = add nsw i32 %t170, %t165
	%t172 = mul nsw i32 %t171, 18
	%t173 = add nsw i32 %t172, %t166
	%t174 = mul nsw i32 %t173, 18
	%t175 = add nsw i32 %t174, %t167
	%t176 = mul nsw i32 %t175, 18
	%t177 = add nsw i32 %t176, %t168
	%t178 = mul nsw i32 %t177, 7
	%t179 = add nsw i32 %t178, %t169
	%t180 = mul nsw i32 %t179, 4
	%t200 = getelementptr inbounds [18 x [18 x [18 x [18 x [18 x [7 x i32]]]]]], [18 x [18 x [18 x [18 x [18 x [7 x i32]]]]]]* @dp, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0
	%t201 = bitcast i32* %t200 to i8*
	%t203 = sext i32 %t180 to i64
	%t202 = getelementptr inbounds i8, i8* %t201, i64 %t203
	%t181 = bitcast i8* %t202 to i32*
	%t204 = load i32, i32* %t181, align 4
	store i32 %t204, i32* %l6, align 4
	br label %.L1
.L1:
	%t205 = load i32, i32* %l6, align 4
	ret i32 %t205
}
define i32 @main() {
.L23:
	%l0 = alloca i32, align 4
	%l1 = alloca i32, align 4
	%l2 = alloca i32, align 4
	%l3 = alloca i32, align 4
	%l4 = alloca i32, align 4
	%l5 = alloca i32, align 4
	%l6 = alloca i32, align 4
	%l7 = alloca i32, align 4
	%l8 = alloca i32, align 4
	%t9 = call i32 (...) @getint()
	store i32 %t9, i32* %l1, align 4
	store i32 0, i32* %l2, align 4
	br label %.L2
.L2:
	%t10 = load i32, i32* %l2, align 4
	%t11 = icmp slt i32 %t10, 18
	br i1 %t11, label %.L3, label %.L4
.L3:
	store i32 0, i32* %l3, align 4
	br label %.L5
.L5:
	%t12 = load i32, i32* %l3, align 4
	%t13 = icmp slt i32 %t12, 18
	br i1 %t13, label %.L6, label %.L7
.L6:
	store i32 0, i32* %l4, align 4
	br label %.L8
.L8:
	%t14 = load i32, i32* %l4, align 4
	%t15 = icmp slt i32 %t14, 18
	br i1 %t15, label %.L9, label %.L10
.L9:
	store i32 0, i32* %l5, align 4
	br label %.L11
.L11:
	%t16 = load i32, i32* %l5, align 4
	%t17 = icmp slt i32 %t16, 18
	br i1 %t17, label %.L12, label %.L13
.L12:
	store i32 0, i32* %l6, align 4
	br label %.L14
.L14:
	%t18 = load i32, i32* %l6, align 4
	%t19 = icmp slt i32 %t18, 18
	br i1 %t19, label %.L15, label %.L16
.L15:
	store i32 0, i32* %l7, align 4
	br label %.L17
.L17:
	%t20 = load i32, i32* %l7, align 4
	%t21 = icmp slt i32 %t20, 7
	br i1 %t21, label %.L18, label %.L19
.L18:
	%t22 = sub nsw i32 0, 1
	%t23 = load i32, i32* %l2, align 4
	%t24 = load i32, i32* %l3, align 4
	%t25 = load i32, i32* %l4, align 4
	%t26 = load i32, i32* %l5, align 4
	%t27 = load i32, i32* %l6, align 4
	%t28 = load i32, i32* %l7, align 4
	%t29 = mul nsw i32 %t23, 18
	%t30 = add nsw i32 %t29, %t24
	%t31 = mul nsw i32 %t30, 18
	%t32 = add nsw i32 %t31, %t25
	%t33 = mul nsw i32 %t32, 18
	%t34 = add nsw i32 %t33, %t26
	%t35 = mul nsw i32 %t34, 18
	%t36 = add nsw i32 %t35, %t27
	%t37 = mul nsw i32 %t36, 7
	%t38 = add nsw i32 %t37, %t28
	%t39 = mul nsw i32 %t38, 4
	%t94 = getelementptr inbounds [18 x [18 x [18 x [18 x [18 x [7 x i32]]]]]], [18 x [18 x [18 x [18 x [18 x [7 x i32]]]]]]* @dp, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0
	%t95 = bitcast i32* %t94 to i8*
	%t97 = sext i32 %t39 to i64
	%t96 = getelementptr inbounds i8, i8* %t95, i64 %t97
	%t40 = bitcast i8* %t96 to i32*
	store i32 %t22, i32* %t40, align 4
	%t41 = load i32, i32* %l7, align 4
	%t42 = add nsw i32 %t41, 1
	store i32 %t42, i32* %l7, align 4
	br label %.L17
.L19:
	%t43 = load i32, i32* %l6, align 4
	%t44 = add nsw i32 %t43, 1
	store i32 %t44, i32* %l6, align 4
	br label %.L14
.L16:
	%t45 = load i32, i32* %l5, align 4
	%t46 = add nsw i32 %t45, 1
	store i32 %t46, i32* %l5, align 4
	br label %.L11
.L13:
	%t47 = load i32, i32* %l4, align 4
	%t48 = add nsw i32 %t47, 1
	store i32 %t48, i32* %l4, align 4
	br label %.L8
.L10:
	%t49 = load i32, i32* %l3, align 4
	%t50 = add nsw i32 %t49, 1
	store i32 %t50, i32* %l3, align 4
	br label %.L5
.L7:
	%t51 = load i32, i32* %l2, align 4
	%t52 = add nsw i32 %t51, 1
	store i32 %t52, i32* %l2, align 4
	br label %.L2
.L4:
	store i32 0, i32* %l2, align 4
	br label %.L20
.L20:
	%t53 = load i32, i32* %l2, align 4
	%t54 = load i32, i32* %l1, align 4
	%t55 = icmp slt i32 %t53, %t54
	br i1 %t55, label %.L21, label %.L22
.L21:
	%t56 = call i32 (...) @getint()
	%t57 = load i32, i32* %l2, align 4
	%t58 = mul nsw i32 %t57, 4
	%t98 = getelementptr inbounds [200 x i32], [200 x i32]* @list, i64 0, i64 0
	%t99 = bitcast i32* %t98 to i8*
	%t101 = sext i32 %t58 to i64
	%t100 = getelementptr inbounds i8, i8* %t99, i64 %t101
	%t59 = bitcast i8* %t100 to i32*
	store i32 %t56, i32* %t59, align 4
	%t60 = load i32, i32* %l2, align 4
	%t61 = mul nsw i32 %t60, 4
	%t102 = getelementptr inbounds [200 x i32], [200 x i32]* @list, i64 0, i64 0
	%t103 = bitcast i32* %t102 to i8*
	%t105 = sext i32 %t61 to i64
	%t104 = getelementptr inbounds i8, i8* %t103, i64 %t105
	%t62 = bitcast i8* %t104 to i32*
	%t63 = load i32, i32* %t62, align 4
	%t64 = mul nsw i32 %t63, 4
	%t106 = getelementptr inbounds [20 x i32], [20 x i32]* @cns, i64 0, i64 0
	%t107 = bitcast i32* %t106 to i8*
	%t109 = sext i32 %t64 to i64
	%t108 = getelementptr inbounds i8, i8* %t107, i64 %t109
	%t65 = bitcast i8* %t108 to i32*
	%t67 = load i32, i32* %t65, align 4
	%t66 = add nsw i32 %t67, 1
	%t68 = load i32, i32* %l2, align 4
	%t69 = mul nsw i32 %t68, 4
	%t110 = getelementptr inbounds [200 x i32], [200 x i32]* @list, i64 0, i64 0
	%t111 = bitcast i32* %t110 to i8*
	%t113 = sext i32 %t69 to i64
	%t112 = getelementptr inbounds i8, i8* %t111, i64 %t113
	%t70 = bitcast i8* %t112 to i32*
	%t71 = load i32, i32* %t70, align 4
	%t72 = mul nsw i32 %t71, 4
	%t114 = getelementptr inbounds [20 x i32], [20 x i32]* @cns, i64 0, i64 0
	%t115 = bitcast i32* %t114 to i8*
	%t117 = sext i32 %t72 to i64
	%t116 = getelementptr inbounds i8, i8* %t115, i64 %t117
	%t73 = bitcast i8* %t116 to i32*
	store i32 %t66, i32* %t73, align 4
	%t74 = load i32, i32* %l2, align 4
	%t75 = add nsw i32 %t74, 1
	store i32 %t75, i32* %l2, align 4
	br label %.L20
.L22:
	%t76 = mul nsw i32 1, 4
	%t118 = getelementptr inbounds [20 x i32], [20 x i32]* @cns, i64 0, i64 0
	%t119 = bitcast i32* %t118 to i8*
	%t121 = sext i32 %t76 to i64
	%t120 = getelementptr inbounds i8, i8* %t119, i64 %t121
	%t77 = bitcast i8* %t120 to i32*
	%t78 = load i32, i32* %t77, align 4
	%t79 = mul nsw i32 2, 4
	%t122 = getelementptr inbounds [20 x i32], [20 x i32]* @cns, i64 0, i64 0
	%t123 = bitcast i32* %t122 to i8*
	%t125 = sext i32 %t79 to i64
	%t124 = getelementptr inbounds i8, i8* %t123, i64 %t125
	%t80 = bitcast i8* %t124 to i32*
	%t81 = load i32, i32* %t80, align 4
	%t82 = mul nsw i32 3, 4
	%t126 = getelementptr inbounds [20 x i32], [20 x i32]* @cns, i64 0, i64 0
	%t127 = bitcast i32* %t126 to i8*
	%t129 = sext i32 %t82 to i64
	%t128 = getelementptr inbounds i8, i8* %t127, i64 %t129
	%t83 = bitcast i8* %t128 to i32*
	%t84 = load i32, i32* %t83, align 4
	%t85 = mul nsw i32 4, 4
	%t130 = getelementptr inbounds [20 x i32], [20 x i32]* @cns, i64 0, i64 0
	%t131 = bitcast i32* %t130 to i8*
	%t133 = sext i32 %t85 to i64
	%t132 = getelementptr inbounds i8, i8* %t131, i64 %t133
	%t86 = bitcast i8* %t132 to i32*
	%t87 = load i32, i32* %t86, align 4
	%t88 = mul nsw i32 5, 4
	%t134 = getelementptr inbounds [20 x i32], [20 x i32]* @cns, i64 0, i64 0
	%t135 = bitcast i32* %t134 to i8*
	%t137 = sext i32 %t88 to i64
	%t136 = getelementptr inbounds i8, i8* %t135, i64 %t137
	%t89 = bitcast i8* %t136 to i32*
	%t90 = load i32, i32* %t89, align 4
	%t91 = call i32 @dfs(i32 %t78, i32 %t81, i32 %t84, i32 %t87, i32 %t90, i32 0)
	store i32 %t91, i32* %l8, align 4
	%t92 = load i32, i32* %l8, align 4
	call void @putint(i32 %t92)
	%t93 = load i32, i32* %l8, align 4
	store i32 %t93, i32* %l0, align 4
	%t138 = load i32, i32* %l0, align 4
	ret i32 %t138
}
declare i32 @getint(...);
declare i32 @getch(...);
declare void @putint(i32);
declare void @putch(i32);
declare void @putstr(i8*);
declare i32 @getarray(i32*);
declare void @putarray(i32, i32*);
