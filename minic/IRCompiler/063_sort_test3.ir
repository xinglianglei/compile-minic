declare i32 @n
define i32 @QuickSort(i32 %t0[0], i32 %t1, i32 %t2) {
	declare i32 %l3[0] ; variable: arr
	declare i32 %l4 ; variable: low
	declare i32 %l5 ; variable: high
	declare i32 %l6
	declare i32 %l7 ; variable: i
	declare i32 %l8 ; variable: j
	declare i32 %l9 ; variable: k
	declare i32 %l10 ; variable: tmp
	declare i32 %t11
	declare i32 %t12
	declare i1 %t13
	declare i32 %t14
	declare i32* %t15
	declare i32 %t16
	declare i32 %t17
	declare i32 %t18
	declare i1 %t19
	declare i32 %t20
	declare i32 %t21
	declare i1 %t22
	declare i32 %t23
	declare i32* %t24
	declare i32 %t25
	declare i32 %t26
	declare i32 %t27
	declare i32 %t28
	declare i1 %t29
	declare i32 %t30
	declare i32 %t31
	declare i32 %t32
	declare i32 %t33
	declare i1 %t34
	declare i32 %t35
	declare i32* %t36
	declare i32 %t37
	declare i32 %t38
	declare i32* %t39
	declare i32 %t40
	declare i32 %t41
	declare i32 %t42
	declare i32 %t43
	declare i32 %t44
	declare i32 %t45
	declare i1 %t46
	declare i32 %t47
	declare i32* %t48
	declare i32 %t49
	declare i32 %t50
	declare i32 %t51
	declare i1 %t52
	declare i32 %t53
	declare i32 %t54
	declare i32 %t55
	declare i32 %t56
	declare i1 %t57
	declare i32 %t58
	declare i32* %t59
	declare i32 %t60
	declare i32 %t61
	declare i32* %t62
	declare i32 %t63
	declare i32 %t64
	declare i32 %t65
	declare i32 %t66
	declare i32 %t67
	declare i32* %t68
	declare i32 %t69
	declare i32 %t70
	declare i32 %t71
	declare i32* %t72
	declare i32 %t73
	declare i32 %t74
	declare i32 %t75
	declare i32 %t76
	declare i32 %t77
	declare i32* %t78
	declare i32 %t79
	declare i32 %t80
	declare i32 %t81
	declare i32 %t82
	entry
	%l3 = %t0
	%l4 = %t1
	%l5 = %t2
	%t11 = %l4
	%t12 = %l5
	%t13 = cmp lt %t11, %t12
	bc %t13, label .L3, label .L5
.L3:
	%l7 = %l4
	%l8 = %l5
	%t14 = mul %l4, 4
	%t15 = add %l3, %t14
	%l9 = *%t15
	br label .L6
.L6:
	%t17 = %l7
	%t18 = %l8
	%t19 = cmp lt %t17, %t18
	bc %t19, label .L9, label .L8
.L9:
	%t20 = %l7
	%t21 = %l8
	%t22 = cmp lt %t20, %t21
	bc %t22, label .L12, label .L11
.L12:
	%t23 = mul %l8, 4
	%t24 = add %l3, %t23
	%t26 = %l9
	%t27 = sub %t26, 1
	%t28 = *%t24
	%t29 = cmp gt %t28, %t27
	bc %t29, label .L10, label .L11
.L10:
	%t30 = %l8
	%t31 = sub %t30, 1
	%l8 = %t31
	br label .L9
.L11:
	%t32 = %l7
	%t33 = %l8
	%t34 = cmp lt %t32, %t33
	bc %t34, label .L13, label .L16
.L13:
	%t35 = mul %l7, 4
	%t36 = add %l3, %t35
	%t38 = mul %l8, 4
	%t39 = add %l3, %t38
	%t41 = *%t39
	*%t36 = %t41
	%t42 = %l7
	%t43 = add %t42, 1
	%l7 = %t43
	br label .L16
.L16:
	%t44 = %l7
	%t45 = %l8
	%t46 = cmp lt %t44, %t45
	bc %t46, label .L19, label .L18
.L19:
	%t47 = mul %l7, 4
	%t48 = add %l3, %t47
	%t50 = *%t48
	%t51 = %l9
	%t52 = cmp lt %t50, %t51
	bc %t52, label .L17, label .L18
.L17:
	%t53 = %l7
	%t54 = add %t53, 1
	%l7 = %t54
	br label .L16
.L18:
	%t55 = %l7
	%t56 = %l8
	%t57 = cmp lt %t55, %t56
	bc %t57, label .L20, label .L6
.L20:
	%t58 = mul %l8, 4
	%t59 = add %l3, %t58
	%t61 = mul %l7, 4
	%t62 = add %l3, %t61
	%t64 = *%t62
	*%t59 = %t64
	%t65 = %l8
	%t66 = sub %t65, 1
	%l8 = %t66
	br label .L6
.L8:
	%t67 = mul %l7, 4
	%t68 = add %l3, %t67
	*%t68 = %l9
	%t70 = %l7
	%t71 = sub %t70, 1
	%l10 = %t71
	%t72 = %l3
	%t73 = %l4
	%t74 = %l10
	%t75 = call i32 @QuickSort(i32* %t72,i32 %t73,i32 %t74)
	%l10 = %t75
	%t76 = %l7
	%t77 = add %t76, 1
	%l10 = %t77
	%t78 = %l3
	%t79 = %l10
	%t80 = %l5
	%t81 = call i32 @QuickSort(i32* %t78,i32 %t79,i32 %t80)
	%l10 = %t81
	br label .L5
.L5:
	%l6 = 0
	%t82 = %l6
	exit %t82
}
define i32 @main() {
	declare i32 %l0
	declare i32 %l1[10] ; variable: a
	declare i32 %l2 ; variable: i
	declare i32 %l3 ; variable: tmp
	declare i32 %l4 ; variable: tmp
	declare i32* %t5
	declare i32 %t6
	declare i32* %t7
	declare i32 %t8
	declare i32* %t9
	declare i32 %t10
	declare i32* %t11
	declare i32 %t12
	declare i32* %t13
	declare i32 %t14
	declare i32* %t15
	declare i32 %t16
	declare i32* %t17
	declare i32 %t18
	declare i32* %t19
	declare i32 %t20
	declare i32* %t21
	declare i32 %t22
	declare i32* %t23
	declare i32 %t24
	declare i32* %t25
	declare i32 %t26
	declare i32 %t27
	declare i32 %t28
	declare i32 %t29
	declare i32 %t30
	declare i1 %t31
	declare i32 %t32
	declare i32* %t33
	declare i32 %t34
	declare i32 %t35
	declare i32 %t36
	declare i32 %t37
	declare i32 %t38
	declare i32 %t39
	entry
	@n = 10
	%t5 = add %l1, 0
	*%t5 = 4
	%t7 = add %l1, 4
	*%t7 = 3
	%t9 = add %l1, 8
	*%t9 = 9
	%t11 = add %l1, 12
	*%t11 = 2
	%t13 = add %l1, 16
	*%t13 = 0
	%t15 = add %l1, 20
	*%t15 = 1
	%t17 = add %l1, 24
	*%t17 = 6
	%t19 = add %l1, 28
	*%t19 = 5
	%t21 = add %l1, 32
	*%t21 = 7
	%t23 = add %l1, 36
	*%t23 = 8
	%l2 = 0
	%l3 = 9
	%t25 = %l1
	%t26 = %l2
	%t27 = %l3
	%t28 = call i32 @QuickSort(i32* %t25,i32 %t26,i32 %t27)
	%l2 = %t28
	br label .L3
.L3:
	%t29 = %l2
	%t30 = @n
	%t31 = cmp lt %t29, %t30
	bc %t31, label .L4, label .L5
.L4:
	%t32 = mul %l2, 4
	%t33 = add %l1, %t32
	%l4 = *%t33
	%t35 = %l4
	call void @putint(i32 %t35)
	%l4 = 10
	%t36 = %l4
	call void @putch(i32 %t36)
	%t37 = %l2
	%t38 = add %t37, 1
	%l2 = %t38
	br label .L3
.L5:
	%l0 = 0
	%t39 = %l0
	exit %t39
}
