declare i32 @n_0 ;n
declare void@init(i32 %t0) {
	declare i32 %l1 
	declare i32 %l2 ;i
	declare i32 %t3 
	declare i32 %t4 
	declare i32 %t5 
	declare i32 %t6 
	declare i32 %t7 
	declare i1 %t8 
	declare i32 %t9 
	declare i32 %t10 
	declare i32 %t11 
	%l1=t0
	entry
	%l2=1
	br Label.L2
.L2:
	%t3=%l2
	%t4=%l1
	%t5=%l1
	%t6 = mul %t4, %t5
	%t7 = add %t6, 1
	%t8=cmp LE %t3, %t7
	bc %t8,label.L3,label.L4
.L3:
	%t9 = neg 0, 1
	=%t9
	%t10=%l2
	%t11 = add %t10, 1
	%l2=%t11
	br Label.L2
.L4:
.L1:
	exit
}

declare int@getint();	declare i32 %l0 
declare void@putint(i32 %t0);	declare i32 %l1 
	%l1=t0
declare void@putch(i32 %t0);	declare i32 %l1 
	%l1=t0
declare int@findfa(i32 %t0) {
	declare i32 %l1 
	declare i32 %l2 
	declare i32 %t3 
	declare i1 %t4 
	declare i32 %t5 
	declare i32 %t6 
	%l1=t0
	entry
	%t3=%l1
	%t4 = eq , %t3
	bc %t4,label.L2,label.L3
.L2:
	%t5=%l1
	%l0=%t5
	br Label.L1
	br Label.L4
.L3:
	%t6=call i32 @findfa(i32 );
	=%t6
	%l0=
	br Label.L1
	br Label.L4
.L4:
.L1:
	exit %l2
}

declare void@mmerge(i32 %t0,i32 %t1) {
	declare i32 %l2 
	declare i32 %l3 
	declare i32 %l4 ;m
	declare i32 %l5 ;n
	declare i32 %t6 
	declare i32 %t7 
	declare i32 %t8 
	declare i32 %t9 
	declare i32 %t10 
	declare i32 %t11 
	declare i1 %t12 
	declare i32 %t13 
	%l2=t0
	%l3=t1
	entry
	%t6=%l2
	%t7=call i32 @findfa(i32 %t6);
	%l4=%t7
	%t8=%l3
	%t9=call i32 @findfa(i32 %t8);
	%l5=%t9
	%t10=%l4
	%t11=%l5
	%t12 = ne %t10, %t11
	bc %t12,label.L2,label.L4
.L2:
	%t13=%l5
	=%t13
	br Label.L4
.L4:
.L1:
	exit
}

declare int@main() {
	declare i32 %l0 
	declare i32 %l1 ;t
	declare i32 %l2 ;m
	declare i32 %l3 ;a
	declare i32 %l4 ;b
	declare i32 %l8 ;i
	declare i32 %l9 ;flag
	declare i32 %l11 ;k
	declare i32 %l23 ;loc
	declare i32 %l86 ;tmp
	declare i32 %t5 
	declare i32 %t6 
	declare i32 %t7 
	declare i32 %t10 
	declare i32 %t12 
	declare i32 %t13 
	declare i32 %t14 
	declare i32 %t15 
	declare i32 %t16 
	declare i32 %t17 
	declare i1 %t18 
	declare i32 %t19 
	declare i32 %t20 
	declare i32 %t21 
	declare i32 %t22 
	declare i32 %t24 
	declare i32 %t25 
	declare i32 %t26 
	declare i32 %t27 
	declare i32 %t28 
	declare i32 %t29 
	declare i32 %t30 
	declare i32 %t31 
	declare i1 %t32 
	declare i32 %t33 
	declare i32 %t34 
	declare i32 %t35 
	declare i1 %t36 
	declare i32 %t37 
	declare i32 %t38 
	declare i32 %t39 
	declare i32 %t40 
	declare i32 %t41 
	declare i1 %t42 
	declare i32 %t43 
	declare i1 %t44 
	declare i1 %t45 
	declare i32 %t46 
	declare i32 %t47 
	declare i32 %t48 
	declare i32 %t49 
	declare i1 %t50 
	declare i32 %t51 
	declare i1 %t52 
	declare i1 %t53 
	declare i32 %t54 
	declare i32 %t55 
	declare i32 %t56 
	declare i32 %t57 
	declare i32 %t58 
	declare i1 %t59 
	declare i32 %t60 
	declare i1 %t61 
	declare i1 %t62 
	declare i32 %t63 
	declare i32 %t64 
	declare i32 %t65 
	declare i32 %t66 
	declare i32 %t67 
	declare i1 %t68 
	declare i32 %t69 
	declare i1 %t70 
	declare i1 %t71 
	declare i32 %t72 
	declare i32 %t73 
	declare i32 %t74 
	declare i32 %t75 
	declare i32 %t76 
	declare i1 %t77 
	declare i32 %t78 
	declare i1 %t79 
	declare i1 %t80 
	declare i32 %t81 
	declare i32 %t82 
	declare i32 %t83 
	declare i1 %t84 
	declare i1 %t85 
	declare i32 %t87 
	declare i32 %t88 
	declare i32 %t89 
	declare i32 %t90 
	declare i32 %t91 
	declare i32 %t92 
	declare i32 %t93 
	declare i32 %t94 
	entry
	%l1=1
	br Label.L2
.L2:
	%t5=%l1
	bc %t5,label.L3,label.L4
.L3:
	%t6=%l1
	%t7 = sub %t6, 1
	%l1=%t7
	%l1=4
	%l2=10
	%l8=0
	%l9=0
	%t10=%l1
	call  @init(i32 %t10);
	%t12=%l1
	%t13=%l1
	%t14 = mul %t12, %t13
	%t15 = add %t14, 1
	%l11=%t15
	br Label.L5
.L5:
	%t16=%l8
	%t17=%l2
	%t18=cmp LT %t16, %t17
	bc %t18,label.L6,label.L7
.L6:
	%t19=call i32 @getint();
	%l3=%t19
	%t20=call i32 @getint();
	%l4=%t20
	%t21=%l9
	%t22 = not 0, %t21
	bc %t22,label.L8,label.L10
.L8:
	%t24=%l1
	%t25=%l3
	%t26 = sub %t25, 1
	%t27 = mul %t24, %t26
	%t28=%l4
	%t29 = add %t27, %t28
	%l23=%t29
	%t30=%l23
	=%t30
	%t31=%l3
	%t32 = eq %t31, 1
	bc %t32,label.L11,label.L13
.L11:
	=0
	%t33=%l23
	call  @mmerge(i32 %t33, i32 0);
	br Label.L13
.L13:
	%t34=%l3
	%t35=%l1
	%t36 = eq %t34, %t35
	bc %t36,label.L14,label.L16
.L14:
	%t37=%l11
	=%t37
	%t38=%l23
	%t39=%l11
	call  @mmerge(i32 %t38, i32 %t39);
	br Label.L16
.L16:
	%t40=%l4
	%t41=%l1
	%t42=cmp LT %t40, %t41
	bc %t42,label.L17,label.L19
.L17:
	%t43 = neg 0, 1
	%t44 = ne , %t43
	bc %t44,label.L18,label.L19
.L18:
	%t45=1
.L19:
	%t45=0
	bc %t45,label.L20,label.L22
.L20:
	%t46=%l23
	%t47=%l23
	%t48 = add %t47, 1
	call  @mmerge(i32 %t46, i32 %t48);
	br Label.L22
.L22:
	%t49=%l4
	%t50=cmp GT %t49, 1
	bc %t50,label.L23,label.L25
.L23:
	%t51 = neg 0, 1
	%t52 = ne , %t51
	bc %t52,label.L24,label.L25
.L24:
	%t53=1
.L25:
	%t53=0
	bc %t53,label.L26,label.L28
.L26:
	%t54=%l23
	%t55=%l23
	%t56 = sub %t55, 1
	call  @mmerge(i32 %t54, i32 %t56);
	br Label.L28
.L28:
	%t57=%l3
	%t58=%l1
	%t59=cmp LT %t57, %t58
	bc %t59,label.L29,label.L31
.L29:
	%t60 = neg 0, 1
	%t61 = ne , %t60
	bc %t61,label.L30,label.L31
.L30:
	%t62=1
.L31:
	%t62=0
	bc %t62,label.L32,label.L34
.L32:
	%t63=%l23
	%t64=%l23
	%t65=%l1
	%t66 = add %t64, %t65
	call  @mmerge(i32 %t63, i32 %t66);
	br Label.L34
.L34:
	%t67=%l3
	%t68=cmp GT %t67, 1
	bc %t68,label.L35,label.L37
.L35:
	%t69 = neg 0, 1
	%t70 = ne , %t69
	bc %t70,label.L36,label.L37
.L36:
	%t71=1
.L37:
	%t71=0
	bc %t71,label.L38,label.L40
.L38:
	%t72=%l23
	%t73=%l23
	%t74=%l1
	%t75 = sub %t73, %t74
	call  @mmerge(i32 %t72, i32 %t75);
	br Label.L40
.L40:
	%t76 = neg 0, 1
	%t77 = ne , %t76
	bc %t77,label.L41,label.L43
.L41:
	%t78 = neg 0, 1
	%t79 = ne , %t78
	bc %t79,label.L42,label.L43
.L42:
	%t80=1
.L43:
	%t80=0
	bc %t80,label.L44,label.L46
.L44:
	%t81=call i32 @findfa(i32 0);
	%t82=%l11
	%t83=call i32 @findfa(i32 %t82);
	%t84 = eq %t81, %t83
	bc %t84,label.L45,label.L46
.L45:
	%t85=1
.L46:
	%t85=0
	bc %t85,label.L47,label.L49
.L47:
	%l9=1
	%t87=%l8
	%t88 = add %t87, 1
	%l86=%t88
	%t89=%l86
	call  @putint(i32 %t89);
	call  @putch(i32 10);
	br Label.L49
.L49:
	br Label.L10
.L10:
	%t90=%l8
	%t91 = add %t90, 1
	%l8=%t91
	br Label.L5
.L7:
	%t92=%l9
	%t93 = not 0, %t92
	bc %t93,label.L50,label.L52
.L50:
	%t94 = neg 0, 1
	call  @putint(i32 %t94);
	call  @putch(i32 10);
	br Label.L52
.L52:
	br Label.L2
.L4:
	%l0=0
	br Label.L1
.L1:
	exit %l0
}

