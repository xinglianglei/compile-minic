declare i32 @map[10][10]  ;map
declare i32 @indegree[10]  ;indegree
declare i32 @queue[10]  ;queue
define void @topo(i32 %t0) {
	declare i32 %l1 
	declare i32 %l2 ;m
	declare i32 %l3 ;t
	declare i32 %l4 ;i
	declare i32 %l5 ;j
	declare i32 %t6 
	declare i32 %t7 
	declare i1 %t8 
	declare i32 %t9 
	declare i32 %t10 
	declare i1 %t11 
	declare i32 %t12 
	declare i32 %t13 
	declare i32* %t14 
	declare i1 %t15 
	declare i32 %t16 
	declare i32 %t17 
	declare i32 %t18 
	declare i32 %t19 
	declare i32 %t20 
	declare i32 %t21 
	declare i32 %t22 
	declare i32* %t23 
	declare i32 %t24 
	declare i32 %t25 
	declare i32 %t26 
	declare i32 %t27 
	declare i32 %t28 
	declare i32* %t29 
	declare i32 %t30 
	declare i32 %t31 
	declare i1 %t32 
	declare i32 %t33 
	declare i32 %t34 
	declare i32 %t35 
	declare i32 %t36 
	declare i32 %t37 
	declare i32* %t38 
	declare i32 %t39 
	declare i32 %t40 
	declare i32 %t41 
	declare i32* %t42 
	declare i32 %t43 
	declare i32 %t44 
	declare i32 %t45 
	declare i32 %t46 
	declare i32* %t47 
	declare i32 %t48 
	declare i32 %t49 
	declare i32 %t50 
	declare i32 %t51 
	declare i32 %t52 
	declare i32 %t53 
	declare i1 %t54 
	declare i32 %t55 
	declare i32 %t56 
	declare i32* %t57 
	declare i32 %t58 
	declare i32 %t59 
	declare i32 %t60 
	entry
	%l1=%t0
	%l2=0
	%l3=0
	%l4=1
	%l5=1
	br label .L2
.L2:
	%t6=%l4
	%t7=%l1
	%t8=cmp le %t6, %t7
	bc %t8,label.L3,label.L4
.L3:
	%l5=1
	br label .L5
.L5:
	%t9=%l5
	%t10=%l1
	%t11=cmp le %t9, %t10
	bc %t11,label.L6,label.L7
.L6:
	%t12=%l5
	%t13 = mul %t12, 4
	%t14 = add @indegree, %t13
	%t16=*%t14
	%t15=cmp eq %t16, 0
	bc %t15,label.L8,label.L10
.L8:
	%t17=%l5
	%l2=%t17
	br label .L7
.L10:
	%t18=%l5
	%t19 = add %t18, 1
	%l5=%t19
	br label .L5
.L7:
	%t20=%l2
	%t21=%l3
	%t22 = mul %t21, 4
	%t23 = add @queue, %t22
	*%t23=%t20
	%t24=%l3
	%t25 = add %t24, 1
	%l3=%t25
	%t26 = neg 1
	%t27=%l2
	%t28 = mul %t27, 4
	%t29 = add @indegree, %t28
	*%t29=%t26
	%l5=1
	br label .L11
.L11:
	%t30=%l5
	%t31=%l1
	%t32=cmp le %t30, %t31
	bc %t32,label.L12,label.L13
.L12:
	%t33=%l2
	%t34=%l5
	%t35 = mul %t33, 10
	%t36 = add %t35, %t34
	%t37 = mul %t36, 4
	%t38 = add @map, %t37
	%t39=*%t38
	bc %t39,label.L14,label.L16
.L14:
	%t40=%l5
	%t41 = mul %t40, 4
	%t42 = add @indegree, %t41
	%t44=*%t42
	%t43 = sub %t44, 1
	%t45=%l5
	%t46 = mul %t45, 4
	%t47 = add @indegree, %t46
	*%t47=%t43
	br label .L16
.L16:
	%t48=%l5
	%t49 = add %t48, 1
	%l5=%t49
	br label .L11
.L13:
	%t50=%l4
	%t51 = add %t50, 1
	%l4=%t51
	br label .L2
.L4:
	%l4=0
	br label .L17
.L17:
	%t52=%l4
	%t53=%l1
	%t54=cmp lt %t52, %t53
	bc %t54,label.L18,label.L19
.L18:
	%t55=%l4
	%t56 = mul %t55, 4
	%t57 = add @queue, %t56
	%t58=*%t57
	call void @putint(i32 %t58);
	call void @putch(i32 10);
	%t59=%l4
	%t60 = add %t59, 1
	%l4=%t60
	br label .L17
.L19:
.L1:
	exit
}

define i32 @main() {
	declare i32 %l0 
	declare i32 %l1 ;n
	declare i32 %l2 ;p
	declare i32 %l3 ;i
	declare i32 %t4 
	declare i32 %t5 
	declare i1 %t6 
	declare i32 %t7 
	declare i32 %t8 
	declare i1 %t9 
	declare i32 %t10 
	declare i32 %t11 
	declare i32 %t12 
	declare i32 %t13 
	declare i32 %t14 
	declare i32* %t15 
	declare i32 %t16 
	declare i32 %t17 
	declare i32* %t18 
	declare i32 %t19 
	declare i32 %t20 
	declare i32 %t21 
	declare i32 %t22 
	declare i32* %t23 
	declare i32 %t24 
	declare i32 %t25 
	declare i32 %t26 
	declare i32 %t27 
	entry
	%l3=1
	%l1=1
	br label .L2
.L2:
	%t4=%l3
	%t5=%l1
	%t6=cmp le %t4, %t5
	bc %t6,label.L3,label.L4
.L3:
	%t7=call i32 @getint();
	%l2=%t7
	br label .L5
.L5:
	%t8=%l2
	%t9=cmp ne %t8, 0
	bc %t9,label.L6,label.L7
.L6:
	%t10=%l3
	%t11=%l2
	%t12 = mul %t10, 10
	%t13 = add %t12, %t11
	%t14 = mul %t13, 4
	%t15 = add @map, %t14
	*%t15=1
	%t16=%l2
	%t17 = mul %t16, 4
	%t18 = add @indegree, %t17
	%t20=*%t18
	%t19 = add %t20, 1
	%t21=%l2
	%t22 = mul %t21, 4
	%t23 = add @indegree, %t22
	*%t23=%t19
	%t24=call i32 @getint();
	%l2=%t24
	br label .L5
.L7:
	%t25=%l3
	%t26 = add %t25, 1
	%l3=%t26
	br label .L2
.L4:
	%t27=%l1
	call void @topo(i32 %t27);
	%l0 = 0
	br label .L1
.L1:
	exit %l0
}

