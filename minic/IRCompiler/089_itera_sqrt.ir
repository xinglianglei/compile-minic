declare int@fsqrt(i32 %t0) {
	declare i32 %l1 
	declare i32 %l2 
	declare i32 %l3 ;x0
	declare i32 %l4 ;x1
	declare i32 %t5 
	declare i32 %t6 
	declare i32 %t7 
	declare i32 %t8 
	declare i32 %t9 
	declare i1 %t10 
	declare i32 %t11 
	declare i32 %t12 
	declare i32 %t13 
	declare i32 %t14 
	declare i32 %t15 
	declare i32 %t16 
	declare i32 %t17 
	declare i32 %t18 
	declare i32 %t19 
	%l1=t0
	entry
	%l3=0
	%t5=%l1
	%t6 = div %t5, 2
	%l4=%t6
	br Label.L2
.L2:
	%t7=%l3
	%t8=%l4
	%t9 = sub %t7, %t8
	%t10 = ne %t9, 0
	bc %t10,label.L3,label.L4
.L3:
	%t11=%l4
	%l3=%t11
	%t12=%l3
	%t13=%l1
	%t14=%l3
	%t15 = div %t13, %t14
	%t16 = add %t12, %t15
	%l4=%t16
	%t17=%l4
	%t18 = div %t17, 2
	%l4=%t18
	br Label.L2
.L4:
	%t19=%l4
	%l0=%t19
	br Label.L1
.L1:
	exit %l2
}

declare void@putint(i32 %t0);	declare i32 %l1 
	%l1=t0
declare int@main() {
	declare i32 %l0 
	declare i32 %l1 ;a
	declare i32 %l2 ;res
	declare i32 %t3 
	declare i32 %t4 
	declare i32 %t5 
	declare i32 %t6 
	entry
	%l1=400
	%t3=%l1
	%t4=call i32 @fsqrt(i32 %t3);
	%l2=%t4
	%t5=%l2
	call  @putint(i32 %t5);
	%l2=10
	%t6=%l2
	call  @putch(i32 %t6);
	%l0=0
	br Label.L1
.L1:
	exit %l0
}

