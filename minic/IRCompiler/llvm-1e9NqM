@array = global [110 x i32] zeroinitializer, align 16
@n = global i32 0, align 4
define void @init(i32 %t0) {
.L5:
	%l1 = alloca i32, align 4
	%l2 = alloca i32, align 4
	store i32 %t0, i32* %l1, align 4
	store i32 1, i32* %l2, align 4
	br label %.L2
.L2:
	%t3 = load i32, i32* %l2, align 4
	%t4 = load i32, i32* %l1, align 4
	%t5 = load i32, i32* %l1, align 4
	%t6 = mul nsw i32 %t4, %t5
	%t7 = add nsw i32 %t6, 1
	%t8 = icmp sle i32 %t3, %t7
	br i1 %t8, label %.L3, label %.L1
.L3:
	%t9 = sub nsw i32 0, 1
	%t10 = load i32, i32* %l2, align 4
	%t11 = mul nsw i32 %t10, 4
	%t15 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t16 = bitcast i32* %t15 to i8*
	%t18 = sext i32 %t11 to i64
	%t17 = getelementptr inbounds i8, i8* %t16, i64 %t18
	%t12 = bitcast i8* %t17 to i32*
	store i32 %t9, i32* %t12, align 4
	%t13 = load i32, i32* %l2, align 4
	%t14 = add nsw i32 %t13, 1
	store i32 %t14, i32* %l2, align 4
	br label %.L2
.L1:
	ret void
}
define i32 @findfa(i32 %t0) {
.L5:
	%l1 = alloca i32, align 4
	%l2 = alloca i32, align 4
	store i32 %t0, i32* %l2, align 4
	%t3 = load i32, i32* %l2, align 4
	%t4 = mul nsw i32 %t3, 4
	%t21 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t22 = bitcast i32* %t21 to i8*
	%t24 = sext i32 %t4 to i64
	%t23 = getelementptr inbounds i8, i8* %t22, i64 %t24
	%t5 = bitcast i8* %t23 to i32*
	%t6 = load i32, i32* %l2, align 4
	%t8 = load i32, i32* %t5, align 4
	%t7 = icmp eq i32 %t8, %t6
	br i1 %t7, label %.L2, label %.L3
.L2:
	%t9 = load i32, i32* %l2, align 4
	store i32 %t9, i32* %l1, align 4
	br label %.L1
.L3:
	%t10 = load i32, i32* %l2, align 4
	%t11 = mul nsw i32 %t10, 4
	%t25 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t26 = bitcast i32* %t25 to i8*
	%t28 = sext i32 %t11 to i64
	%t27 = getelementptr inbounds i8, i8* %t26, i64 %t28
	%t12 = bitcast i8* %t27 to i32*
	%t13 = load i32, i32* %t12, align 4
	%t14 = call i32 @findfa(i32 %t13)
	%t15 = load i32, i32* %l2, align 4
	%t16 = mul nsw i32 %t15, 4
	%t29 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t30 = bitcast i32* %t29 to i8*
	%t32 = sext i32 %t16 to i64
	%t31 = getelementptr inbounds i8, i8* %t30, i64 %t32
	%t17 = bitcast i8* %t31 to i32*
	store i32 %t14, i32* %t17, align 4
	%t18 = load i32, i32* %l2, align 4
	%t19 = mul nsw i32 %t18, 4
	%t33 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t34 = bitcast i32* %t33 to i8*
	%t36 = sext i32 %t19 to i64
	%t35 = getelementptr inbounds i8, i8* %t34, i64 %t36
	%t20 = bitcast i8* %t35 to i32*
	%t37 = load i32, i32* %t20, align 4
	store i32 %t37, i32* %l1, align 4
	br label %.L1
.L1:
	%t38 = load i32, i32* %l1, align 4
	ret i32 %t38
}
define void @mmerge(i32 %t0, i32 %t1) {
.L5:
	%l2 = alloca i32, align 4
	%l3 = alloca i32, align 4
	%l4 = alloca i32, align 4
	%l5 = alloca i32, align 4
	store i32 %t0, i32* %l2, align 4
	store i32 %t1, i32* %l3, align 4
	%t6 = load i32, i32* %l2, align 4
	%t7 = call i32 @findfa(i32 %t6)
	store i32 %t7, i32* %l4, align 4
	%t8 = load i32, i32* %l3, align 4
	%t9 = call i32 @findfa(i32 %t8)
	store i32 %t9, i32* %l5, align 4
	%t10 = load i32, i32* %l4, align 4
	%t11 = load i32, i32* %l5, align 4
	%t12 = icmp ne i32 %t10, %t11
	br i1 %t12, label %.L2, label %.L1
.L2:
	%t13 = load i32, i32* %l5, align 4
	%t14 = load i32, i32* %l4, align 4
	%t15 = mul nsw i32 %t14, 4
	%t17 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t18 = bitcast i32* %t17 to i8*
	%t20 = sext i32 %t15 to i64
	%t19 = getelementptr inbounds i8, i8* %t18, i64 %t20
	%t16 = bitcast i8* %t19 to i32*
	store i32 %t13, i32* %t16, align 4
	br label %.L1
.L1:
	ret void
}
define i32 @main() {
.L41:
	%l0 = alloca i32, align 4
	%l1 = alloca i32, align 4
	%l2 = alloca i32, align 4
	%l3 = alloca i32, align 4
	%l4 = alloca i32, align 4
	%l5 = alloca i32, align 4
	%l6 = alloca i32, align 4
	%l7 = alloca i32, align 4
	%l8 = alloca i32, align 4
	%l9 = alloca i32, align 4
	store i32 1, i32* %l1, align 4
	br label %.L2
.L2:
	%t10 = load i32, i32* %l1, align 4
	%t126 = icmp ne i32 %t10, 0
	br i1 %t126, label %.L3, label %.L4
.L3:
	%t11 = load i32, i32* %l1, align 4
	%t12 = sub nsw i32 %t11, 1
	store i32 %t12, i32* %l1, align 4
	store i32 4, i32* %l1, align 4
	store i32 10, i32* %l2, align 4
	store i32 0, i32* %l5, align 4
	store i32 0, i32* %l6, align 4
	%t13 = load i32, i32* %l1, align 4
	call void @init(i32 %t13)
	%t14 = load i32, i32* %l1, align 4
	%t15 = load i32, i32* %l1, align 4
	%t16 = mul nsw i32 %t14, %t15
	%t17 = add nsw i32 %t16, 1
	store i32 %t17, i32* %l7, align 4
	br label %.L5
.L5:
	%t18 = load i32, i32* %l5, align 4
	%t19 = load i32, i32* %l2, align 4
	%t20 = icmp slt i32 %t18, %t19
	br i1 %t20, label %.L6, label %.L7
.L6:
	%t21 = call i32 (...) @getint()
	store i32 %t21, i32* %l3, align 4
	%t22 = call i32 (...) @getint()
	store i32 %t22, i32* %l4, align 4
	%t23 = load i32, i32* %l6, align 4
	%t24 = icmp eq i32 %t23, 0
	br i1 %t24, label %.L8, label %.L10
.L8:
	%t25 = load i32, i32* %l1, align 4
	%t26 = load i32, i32* %l3, align 4
	%t27 = sub nsw i32 %t26, 1
	%t28 = mul nsw i32 %t25, %t27
	%t29 = load i32, i32* %l4, align 4
	%t30 = add nsw i32 %t28, %t29
	store i32 %t30, i32* %l8, align 4
	%t31 = load i32, i32* %l8, align 4
	%t32 = load i32, i32* %l8, align 4
	%t33 = mul nsw i32 %t32, 4
	%t127 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t128 = bitcast i32* %t127 to i8*
	%t130 = sext i32 %t33 to i64
	%t129 = getelementptr inbounds i8, i8* %t128, i64 %t130
	%t34 = bitcast i8* %t129 to i32*
	store i32 %t31, i32* %t34, align 4
	%t35 = load i32, i32* %l3, align 4
	%t36 = icmp eq i32 %t35, 1
	br i1 %t36, label %.L11, label %.L13
.L11:
	%t37 = mul nsw i32 0, 4
	%t131 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t132 = bitcast i32* %t131 to i8*
	%t134 = sext i32 %t37 to i64
	%t133 = getelementptr inbounds i8, i8* %t132, i64 %t134
	%t38 = bitcast i8* %t133 to i32*
	store i32 0, i32* %t38, align 4
	%t39 = load i32, i32* %l8, align 4
	call void @mmerge(i32 %t39, i32 0)
	br label %.L13
.L13:
	%t40 = load i32, i32* %l3, align 4
	%t41 = load i32, i32* %l1, align 4
	%t42 = icmp eq i32 %t40, %t41
	br i1 %t42, label %.L14, label %.L16
.L14:
	%t43 = load i32, i32* %l7, align 4
	%t44 = load i32, i32* %l7, align 4
	%t45 = mul nsw i32 %t44, 4
	%t135 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t136 = bitcast i32* %t135 to i8*
	%t138 = sext i32 %t45 to i64
	%t137 = getelementptr inbounds i8, i8* %t136, i64 %t138
	%t46 = bitcast i8* %t137 to i32*
	store i32 %t43, i32* %t46, align 4
	%t47 = load i32, i32* %l8, align 4
	%t48 = load i32, i32* %l7, align 4
	call void @mmerge(i32 %t47, i32 %t48)
	br label %.L16
.L16:
	%t49 = load i32, i32* %l8, align 4
	%t50 = add nsw i32 %t49, 1
	%t51 = mul nsw i32 %t50, 4
	%t139 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t140 = bitcast i32* %t139 to i8*
	%t142 = sext i32 %t51 to i64
	%t141 = getelementptr inbounds i8, i8* %t140, i64 %t142
	%t52 = bitcast i8* %t141 to i32*
	%t53 = sub nsw i32 0, 1
	%t55 = load i32, i32* %t52, align 4
	%t54 = icmp ne i32 %t55, %t53
	br i1 %t54, label %.L20, label %.L19
.L20:
	%t56 = load i32, i32* %l4, align 4
	%t57 = load i32, i32* %l1, align 4
	%t58 = icmp slt i32 %t56, %t57
	br i1 %t58, label %.L17, label %.L19
.L17:
	%t59 = load i32, i32* %l8, align 4
	%t60 = load i32, i32* %l8, align 4
	%t61 = add nsw i32 %t60, 1
	call void @mmerge(i32 %t59, i32 %t61)
	br label %.L19
.L19:
	%t62 = load i32, i32* %l8, align 4
	%t63 = sub nsw i32 %t62, 1
	%t64 = mul nsw i32 %t63, 4
	%t143 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t144 = bitcast i32* %t143 to i8*
	%t146 = sext i32 %t64 to i64
	%t145 = getelementptr inbounds i8, i8* %t144, i64 %t146
	%t65 = bitcast i8* %t145 to i32*
	%t66 = sub nsw i32 0, 1
	%t68 = load i32, i32* %t65, align 4
	%t67 = icmp ne i32 %t68, %t66
	br i1 %t67, label %.L24, label %.L23
.L24:
	%t69 = load i32, i32* %l4, align 4
	%t70 = icmp sgt i32 %t69, 1
	br i1 %t70, label %.L21, label %.L23
.L21:
	%t71 = load i32, i32* %l8, align 4
	%t72 = load i32, i32* %l8, align 4
	%t73 = sub nsw i32 %t72, 1
	call void @mmerge(i32 %t71, i32 %t73)
	br label %.L23
.L23:
	%t74 = load i32, i32* %l8, align 4
	%t75 = load i32, i32* %l1, align 4
	%t76 = add nsw i32 %t74, %t75
	%t77 = mul nsw i32 %t76, 4
	%t147 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t148 = bitcast i32* %t147 to i8*
	%t150 = sext i32 %t77 to i64
	%t149 = getelementptr inbounds i8, i8* %t148, i64 %t150
	%t78 = bitcast i8* %t149 to i32*
	%t79 = sub nsw i32 0, 1
	%t81 = load i32, i32* %t78, align 4
	%t80 = icmp ne i32 %t81, %t79
	br i1 %t80, label %.L28, label %.L27
.L28:
	%t82 = load i32, i32* %l3, align 4
	%t83 = load i32, i32* %l1, align 4
	%t84 = icmp slt i32 %t82, %t83
	br i1 %t84, label %.L25, label %.L27
.L25:
	%t85 = load i32, i32* %l8, align 4
	%t86 = load i32, i32* %l8, align 4
	%t87 = load i32, i32* %l1, align 4
	%t88 = add nsw i32 %t86, %t87
	call void @mmerge(i32 %t85, i32 %t88)
	br label %.L27
.L27:
	%t89 = load i32, i32* %l8, align 4
	%t90 = load i32, i32* %l1, align 4
	%t91 = sub nsw i32 %t89, %t90
	%t92 = mul nsw i32 %t91, 4
	%t151 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t152 = bitcast i32* %t151 to i8*
	%t154 = sext i32 %t92 to i64
	%t153 = getelementptr inbounds i8, i8* %t152, i64 %t154
	%t93 = bitcast i8* %t153 to i32*
	%t94 = sub nsw i32 0, 1
	%t96 = load i32, i32* %t93, align 4
	%t95 = icmp ne i32 %t96, %t94
	br i1 %t95, label %.L32, label %.L31
.L32:
	%t97 = load i32, i32* %l3, align 4
	%t98 = icmp sgt i32 %t97, 1
	br i1 %t98, label %.L29, label %.L31
.L29:
	%t99 = load i32, i32* %l8, align 4
	%t100 = load i32, i32* %l8, align 4
	%t101 = load i32, i32* %l1, align 4
	%t102 = sub nsw i32 %t100, %t101
	call void @mmerge(i32 %t99, i32 %t102)
	br label %.L31
.L31:
	%t103 = call i32 @findfa(i32 0)
	%t104 = load i32, i32* %l7, align 4
	%t105 = call i32 @findfa(i32 %t104)
	%t106 = icmp eq i32 %t103, %t105
	br i1 %t106, label %.L36, label %.L10
.L36:
	%t107 = load i32, i32* %l7, align 4
	%t108 = mul nsw i32 %t107, 4
	%t155 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t156 = bitcast i32* %t155 to i8*
	%t158 = sext i32 %t108 to i64
	%t157 = getelementptr inbounds i8, i8* %t156, i64 %t158
	%t109 = bitcast i8* %t157 to i32*
	%t110 = sub nsw i32 0, 1
	%t112 = load i32, i32* %t109, align 4
	%t111 = icmp ne i32 %t112, %t110
	br i1 %t111, label %.L37, label %.L10
.L37:
	%t113 = mul nsw i32 0, 4
	%t159 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t160 = bitcast i32* %t159 to i8*
	%t162 = sext i32 %t113 to i64
	%t161 = getelementptr inbounds i8, i8* %t160, i64 %t162
	%t114 = bitcast i8* %t161 to i32*
	%t115 = sub nsw i32 0, 1
	%t117 = load i32, i32* %t114, align 4
	%t116 = icmp ne i32 %t117, %t115
	br i1 %t116, label %.L33, label %.L10
.L33:
	store i32 1, i32* %l6, align 4
	%t118 = load i32, i32* %l5, align 4
	%t119 = add nsw i32 %t118, 1
	store i32 %t119, i32* %l9, align 4
	%t120 = load i32, i32* %l9, align 4
	call void @putint(i32 %t120)
	call void @putch(i32 10)
	br label %.L10
.L10:
	%t121 = load i32, i32* %l5, align 4
	%t122 = add nsw i32 %t121, 1
	store i32 %t122, i32* %l5, align 4
	br label %.L5
.L7:
	%t123 = load i32, i32* %l6, align 4
	%t124 = icmp eq i32 %t123, 0
	br i1 %t124, label %.L38, label %.L2
.L38:
	%t125 = sub nsw i32 0, 1
	call void @putint(i32 %t125)
	call void @putch(i32 10)
	br label %.L2
.L4:
	store i32 0, i32* %l0, align 4
	%t163 = load i32, i32* %l0, align 4
	ret i32 %t163
}
declare i32 @getint(...);
declare i32 @getch(...);
declare void @putint(i32);
declare void @putch(i32);
declare void @putstr(i8*);
declare i32 @getarray(i32*);
declare void @putarray(i32, i32*);
