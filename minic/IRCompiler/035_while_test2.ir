declare int@FourWhile() {
	declare i32 %l0 
	declare i32 %l1 ;a
	declare i32 %l2 ;b
	declare i32 %l3 ;c
	declare i32 %l4 ;d
	declare i32 %t5 
	declare i1 %t6 
	declare i32 %t7 
	declare i32 %t8 
	declare i32 %t9 
	declare i1 %t10 
	declare i32 %t11 
	declare i32 %t12 
	declare i32 %t13 
	declare i1 %t14 
	declare i32 %t15 
	declare i32 %t16 
	declare i32 %t17 
	declare i1 %t18 
	declare i32 %t19 
	declare i32 %t20 
	declare i32 %t21 
	declare i32 %t22 
	declare i32 %t23 
	declare i32 %t24 
	declare i32 %t25 
	declare i32 %t26 
	declare i32 %t27 
	declare i32 %t28 
	declare i32 %t29 
	declare i32 %t30 
	declare i32 %t31 
	declare i32 %t32 
	declare i32 %t33 
	entry
	%l1=5
	%l2=6
	%l3=7
	%l4=10
	br Label.L2
.L2:
	%t5=%l1
	%t6=cmp LT %t5, 20
	bc %t6,label.L3,label.L4
.L3:
	%t7=%l1
	%t8 = add %t7, 3
	%l1=%t8
	br Label.L5
.L5:
	%t9=%l2
	%t10=cmp LT %t9, 10
	bc %t10,label.L6,label.L7
.L6:
	%t11=%l2
	%t12 = add %t11, 1
	%l2=%t12
	br Label.L8
.L8:
	%t13=%l3
	%t14 = eq %t13, 7
	bc %t14,label.L9,label.L10
.L9:
	%t15=%l3
	%t16 = sub %t15, 1
	%l3=%t16
	br Label.L11
.L11:
	%t17=%l4
	%t18=cmp LT %t17, 20
	bc %t18,label.L12,label.L13
.L12:
	%t19=%l4
	%t20 = add %t19, 3
	%l4=%t20
	br Label.L11
.L13:
	%t21=%l4
	%t22 = sub %t21, 1
	%l4=%t22
	br Label.L8
.L10:
	%t23=%l3
	%t24 = add %t23, 1
	%l3=%t24
	br Label.L5
.L7:
	%t25=%l2
	%t26 = sub %t25, 2
	%l2=%t26
	br Label.L2
.L4:
	%t27=%l1
	%t28=%l2
	%t29=%l4
	%t30 = add %t28, %t29
	%t31 = add %t27, %t30
	%t32=%l3
	%t33 = add %t31, %t32
	%l0=%t33
	br Label.L1
.L1:
	exit %l0
}

declare int@main() {
	declare i32 %l0 
	declare i32 %t1 
	entry
	%t1=call i32 @FourWhile();
	%l0=%t1
	br Label.L1
.L1:
	exit %l0
}

